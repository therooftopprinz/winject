Type RRC_BOOL
{
    type(unsigned) width(8)
};

Type RRC_U8
{
    type(unsigned) width(8)
};

Type RRC_U8A
{
    type(RRC_U8) dynamic_array(256)
};

Type RRC_U16
{
    type(unsigned) width(16)
};

Type RRC_U32
{
    type(unsigned) width(64)
};

Type RRC_U64
{
    type(unsigned) width(64)
};

Type RRC_U16_OPTIONAL
{
    type(unsigned) width(16) optional()
};

Enumeration RRC_LLCTxMode
{
    E_RRC_LLCTxMode_TM,
    E_RRC_LLCTxMode_AM
};

Enumeration RRC_LLCCRCType
{
    E_RRC_LLCCRCType_NONE,
    E_RRC_LLCCRCType_CRC32_04C11DB7
};

Sequence RRC_LLCTxConfig
{
    RRC_LLCTxMode mode,
    RRC_LLCCRCType crcType
};

Enumeration RRC_CipherAlgorithm
{
    E_RRC_CipherAlgorithm_NONE,
    E_RRC_CipherAlgorithm_AES128_CBC
};

Enumeration RRC_IntegrityAlgorithm
{
    E_RRC_CipherAlgorithm_NONE,
    E_RRC_CipherAlgorithm_HMAC_SHA1
};

Enumeration RRC_CompressionAlgorithm
{
    RRC_CompressionAlgorithm_NONE,
    RRC_CompressionAlgorithm_ZLIB
};

Sequence RRC_LLCConfig
{
    RRC_LLCTxConfig txConfig
};

Sequence RRC_PDCPConfig
{
    RRC_BOOL allowRLF,
    RRC_BOOL allowSegmentation,
    RRC_BOOL allowReordering,
    RRC_U16_OPTIONAL maxSnDistance,
    RRC_CipherAlgorithm cipherAlgorithm,
    RRC_IntegrityAlgorithm integrityAlgorithm,
    RRC_CompressionAlgorithm compressionAlgorithm,
    RRC_U8 compressionLevel
};

Sequence RRC_ExchangeRequest
{
    RRC_U8 lcid,
    RRC_LLCConfig llcConfig,
    RRC_PDCPConfig pdcpConfig
};

Sequence RRC_ExchangeResponse
{
    RRC_U8 lcid,
    RRC_LLCConfig llcConfig,
    RRC_PDCPConfig pdcpConfig
};

Choice RRC_Message
{
    RRC_ExchangeRequest,
    RRC_ExchangeResponse
};

Sequence RRC
{
    RRC_U8 requestID,
    RRC_Message message
}
